<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>yellow_guy</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///for more control
_friction = 2.5;
_gravity = 3;
_hspeed = 0;
_vspeed = 0;

on_ground = true;

move_sprite = yellow_guy
idle_sprite = yellow_guy  



//affected by powerups, etc
move_speed = 5
jump_speed = 50

// animation
image_speed = 5/30

 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HANDLE MOVEMENT

right = keyboard_check(vk_right);
left = keyboard_check(vk_left);
up = keyboard_check_pressed(vk_space);
max_gravity = 15;

idle_sprite = yellow_guy;
move_sprite = yellow_guy;
jump_sprite = yellow_guy;

if (right) {
        _hspeed = move_speed;
        image_xscale = 1;
}

if (left) {
        _hspeed = -move_speed;
        image_xscale = -1;
}

if (left and right) {
    _hspeed = 0;
}

if (not left and not right and on_ground)
    _hspeed -= sign(_hspeed) * _friction;

if (_vspeed &lt; max_gravity) _vspeed += _gravity;

// always check thisbefore anything else
if (place_meeting(x, y+1, yellow_guy) )
{
    on_ground = true;
    _vspeed = up * -jump_speed;
} else {
    on_ground = false;
}

// handle horizontal
if (place_meeting(x + _hspeed, y , obg_barrier) ) {
    while not place_meeting(x + sign(_hspeed),y, obg_barrier) {
        x += sign(_hspeed)
    }
    _hspeed = 0;
    
}
x += _hspeed;

//handle vertical
if place_meeting(x, y+_vspeed , obg_barrier ) {
    while (not place_meeting(x,y + sign(_vspeed),obg_barrier) ){
    y += sign(_vspeed)
    }
    _vspeed = 0
}
y += _vspeed

// die if fall outside roo 

// if (y &gt; room_height) instance_destroy()

// when jump right

    
    // not moving
    
    if(not left and not right) {
        if (on_ground) {
            sprite_index = idle_sprite;
        } else {
            sprite_index = jump_sprite;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
